.Dd May 12, 2007
.Dt ewfacquirestream
.Os libewf
.Sh NAME
.Nm ewfacquirestream
.Nd acquires data in the EWF format from stdin
.Sh SYNOPSIS
.Nm ewfacquirestream
.Op Fl b Ar amount_of_sectors
.Op Fl c Ar compression_type
.Op Fl C Ar case_number
.Op Fl d Ar digest_type
.Op Fl D Ar description
.Op Fl e Ar examiner_name
.Op Fl E Ar evidence_number
.Op Fl f Ar format
.Op Fl m Ar media_type
.Op Fl M Ar volume_type
.Op Fl N Ar notes
.Op Fl S Ar segment_file_size
.Op Fl t Ar target
.Op Fl -hsvV
.Sh DESCRIPTION
.Nm ewfacquirestream
is a utility to acquire media data from stdin
and store it in EWF format (Expert Witness Format).
.Nm ewfacquirestream
acquires media data in a format equivalent to EnCase and FTK imager, including meta data.
Under Linux, FreeBSD, NetBSD, OpenBSD, MacOS\-X/Darwin
.Pp
.Nm ewfacquirestream
is part of the
.Nm libewf
package.
.Nm libewf
is a library to support the Expert Witness Compression Format (EWF).
.Nm libewf
supports both the SMART format (EWF-S01) and the EnCase format (EWF-E01).
.Nm libewf
currently does not support the Logical Volume format (EWF-L01).
EWF-X is an expirimental format intended for testing purposes to enhance the EWF format.
.Nm libewf
allows you to read and write media data in the EWF format.
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Fl b Ar amount_of_sectors
the amount of sectors to read at once (per chunk), options: 64 (default), 128, 256, 512, 1024, 2048, 4096, 8192, 16384 or 32768
.It Fl c Ar compression_type
the compression type, options: none (is default), empty_block, fast, best
.It Fl C Ar case_number
the case number (default is case_number)
.It Fl d Ar digest_type
calculate additional digest (hash) types besides md5, options: sha1
.It Fl D Ar description
the description (default is description)
.It Fl e Ar examiner_name
the examiner name (default is examiner_name)
.It Fl E Ar evidence_number
the evidence number (default is evidence_number)
.It Fl f Ar format
the EWF file format to write to, options: ftk, encase2, encase3, encase4, encase5 (is default), encase6, linen5, linen6, ewfx.
.Nm libewf
does not support streamed writes for other EWF formats.
.It Fl h
shows this help
.It Fl m Ar media_type
the media type, options: fixed (is default), removable
.It Fl M Ar volume_type
the volume type, options: logical (is default), physical
.It Fl N Ar notes
the notes (default is notes)
.It Fl s
swap byte pairs of the media data (from AB to BA)
(use this for big to little endian conversion and vice versa)
.It Fl S Ar segment_file_size
the segment file size in kbytes (2^10) (default is 665600)
.It Fl t Ar target
the target file (without extension) to write to (default is stream)
.It Fl v
verbose output to stderr
.It Fl V
print version
.El
.Pp
.Nm ewfacquirestream
will read from stding until it encounters a read error.
On read error it will stop no error information is stored in the EWF file(s).
.Pp
Empty block compression detects blocks of sectors with entirely the same byte data and compresses them using the default compression level.
.Sh ENVIRONMENT
None
.Sh FILES
None
.Sh EXAMPLES
.Bd -literal
# ewfacquirestream -C 1 -D Floppy -E 1.1 -e 'John D.' -N 'Just a floppy in my system' -m removable -M physical -t floppy </dev/fd0
ewfacquirestream 20070512 (libewf 20070512, zlib 1.2.3, libcrypto 0.9.8, libuuid)

Using the following acquiry parameters:
Image path and filename:        floppy.E01
Case number:                    1
Description:                    Floppy
Evidence number:                1.1
Examiner name:                  John D.
Notes:                          Just a floppy in my system
Media type:                     removable
Volume type:                    physical
Compression used:               none
Compress empty blocks:          no
EWF file format:                EnCase 5
Acquiry start offet:            0
Amount of bytes to acquire:     0 (until end of input)
Evidence segment file size:     665600 kbytes
Block size:                     64 sectors
Error granularity:              64 sectors
Retries on read error:          2
Wipe sectors on read error:     no

Acquiry started at: Sat May 12 11:32:41 2007

This could take a while.

Acquiry completed at: Sat May 12 11:32:42 2007

Written: 1.4 MB (1474560 bytes) in 1 second(s) with 1 MB/s (1474560 bytes/second).

MD5 hash calculated over data: ae1ce8f5ac079d3ee93f97fe3792bda3
.Ed
.Sh DIAGNOSTICS
Errors, verbose and debug output are printed to stderr when verbose output \-v is enabled.
Verbose and debug output are only printed when enabled at compilation.
.Sh BUGS
Please report bugs of any kind to <forensics@hoffmannbv.nl> or on the project website:
https://libewf.uitwisselplatform.nl/
.Sh AUTHOR
These man pages were written by Joachim Metz.
.Sh COPYRIGHT
Copyright 2006-2007 Joachim Metz, Hoffmann Investigations <forensics@hoffmannbv.nl> and contributors.
This is free software; see the source for copying conditions. There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
.Sh SEE ALSO
.Xr ewfacquire 1 ,
.Xr ewfexport 1 ,
.Xr ewfinfo 1 ,
.Xr ewfverify 1
