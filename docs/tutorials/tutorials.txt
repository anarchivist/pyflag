================
PyFlag Tutorials
================
PyFlag is an advanced forensic application with many features. Often new users find it difficult to comprehend the many features and ways of using PyFlag in real life contexts. These tutorials address this need and provide examples of how to use Flag in real life scenarios.

Although in real life it is rare to use all the features that PyFlag offers, these tutorials attempt to show off many of the features available. Often we do not necessarily arrive at the final conclusions in the quickest way, rather we show different features along the way which may be useful occasionally. Once users are accustomed to the difference features and techniques, the most appropriate methodology for specific cases should become evident.

Accompanying these tutorials are a number of example files containing images, or log files. These pre-fabricated samples are not actual forensic evidence. The example files strike a balance between complexity (allowing users to really stress test PyFlag) and download size. We encourage users to employ these samples when evaluating other forensic products against PyFlag. We welcome constructive comments on improving PyFlag. Eventually we hope the sample images evolve to become a subjective metric used to measure performance of forensic tools in general.

Log Analysis
------------
Log Analysis is an important forensic technique, often presenting the only substantial evidence in a particular case. This technique is often used in a non forensic context as well.

In any analysis a general high level process is followed. The analyst must start with a high level theory of what happened - this can just be a idea of why the investigation was prompted in the first place.

The analyst then poses questions to confirm or deny this theory. For example:

  - We suspect a user stole another users credentials: Who logged onto the server within a time window? From where?
  - We suspect a DoS against our web server: Which IP downloaded the most bytes? over what time period?
  - Our marketing department wants to know which document is most popular: What documents are most popular on this site?

These questions are then answered, leading the investigator to revise their theory or reinforce it - leading to further questions and so on.

Often when faced with analysing log files, the analyst faces a number of problems:

1. Log files have no standard format - different applications procduce different log files. Often the same application produces different format log file depending on configuration information.

2. Log files are typically very large. This makes it difficult to find important information within the mass of data.

PyFlag aims to solve these two issues by:

1. Log File presents are templates used to load a log file into a standard format. The same presents may be used for the same source of log files (a specific server for example) after being generated.

2. All data is placed in the database, with appropriated indexes, searching and grouping of data within log files is extremely fast. This allows for an interactive session, allowing the analyst to quickly and efficiently analyse the log data.

The following sections will go through a number of examples. Readers are encouraged to follow these examples to gain an idea of the different features offered.

Preperation
~~~~~~~~~~~
Although PyFlag is very simple to install (Just download the mysql binary release, untar somewhere and run). There are a number of optional features that need to be installed to enhance the PyFlag user experience. 

When analysing Log files it is often nice to know who is responsible for a specific IP address. Often analysts perform a *whois* query on the required IP address. This process is typically slow, however, and the number of queries allowed is typically limited.

PyFlag allows for performing offline whois queries by downloading the entire assigned IP database when possible and quickly searching through it. The whois database can be downloaded from the relevant registry (e.g. APNIC, RIPE etc). Due to copyright considerations, we are unable to ship these databases with PyFlag. A script is provided with the pyflag distribution to download the freely available whois databases. 
