#! /bin/sh
# preinst script for pyflag
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <new-preinst> `install'
#        * <new-preinst> `install' <old-version>
#        * <new-preinst> `upgrade' <old-version>
#        * <old-preinst> `abort-upgrade' <new-version>
#
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    install|upgrade)
	
	if [ "$1" = "upgrade" ]
	then
	    # Try to stop the server in a sane way. If it does not succeed let the admin
		# do it himself. No database directories should be removed while the server
		# is running!
		stop_server() {
		  set +e
		  if [ -x /usr/sbin/invoke-rc.d ]; then
    		invoke-rc.d pyflag stop
    		errno=$?
		  else
    		/etc/init.d/pyflag stop
    		errno=$?
		  fi
		  set -e

		  if [ "$errno" != 0 ]; then
    		echo "Trying to stop the pyflag server resulted in exitcode $errno." >&2
    		echo "Stop it yourself and try again!" >&2
    		exit 1
		  fi
		}
		
		# to be sure
		if [ "`ps -u pyflag | grep -cv 'grep'`" > 1 ]; then
		  stop_server
		fi


	fi
	
	# If we use NIS then errors should be tolerated. It's up to the
	# user to ensure that the pyflag user is correctly setup.
	# Beware that there are two ypwhich one of them needs the 2>/dev/null!
	if test -n "`which ypwhich 2>/dev/null`"  &&  ypwhich >/dev/null 2>&1; then
	  set +e
	fi

	#
	# Now we have to ensure the following state:
	# /etc/passwd: pyflag:x:100:101:pyflag Server:/var/lib/pyflag:/bin/false
	# /etc/group:  pyflag:x:101:
	#
	# Sadly there could any state be present on the system so we have to
	# modify everything carefully i.e. not doing a chown before creating
	# the user etc...
	#

	# creating pyflag group if he isn't already there
	if ! getent group pyflag >/dev/null; then
        	# Adding system group: pyflag.
        	addgroup --system pyflag >/dev/null
	fi

	# creating pyflag user if he isn't already there
	if ! getent passwd pyflag >/dev/null; then
        	# Adding system user: pyflag.
        	adduser \
        	  --system \
        	  --ingroup pyflag \
        	  --home /var/lib/pyflag \
        	  --gecos "pyflag Server" \
        	  --shell /bin/sh \
        	  pyflag  >/dev/null
	fi

	# end of NIS tolerance zone
	set -e

	# creating pyflag home directory
	if ! test -d /var/lib/pyflag; then
        	mkdir /var/lib/pyflag
	fi

	# Since the home directory was created before putting the user into
	# the pyflag group and moreover we cannot guarantee that the
	# permissions were correctly *before* calling this script, we fix them now.
	# In case we use NIS and no pyflag user is present then this script should
	# better fail now than later..
	chown pyflag:pyflag /var/lib/pyflag
	find /var/lib/pyflag -not -group pyflag -print0 \
	  | xargs -0 --no-run-if-empty chgrp pyflag

    ;;

    abort-upgrade)
    ;;

    *)
        echo "preinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0


